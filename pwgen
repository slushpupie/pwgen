#!/bin/bash 


PWLEN=12
N=5
DIGITS=1
SYM=1
MIN_WORD=3
MAX_WORD1=12
SHUF=gshuf

WORDLIST="/usr/share/dict/words /usr/share/dict/propernames /usr/share/dict/connectives"
SYM_LIST=(\` \~ \! @ \# \$ % ^ \& \* \( \) - _ \= + \[ \{ \] \} \\ \| \; : \' \" , \< . \> / \?)
SYM_LEN=${#SYM_LIST[*]}

function show_usage() {
  echo "Usage: `basename $0` [-n \#passwords][-p pwlen][-d \#digits][-s \#symbols][-w wordlists]"
  echo "  More digits may be used to fill to pwlen"
};

while getopts ":p:n:d:s:w:" Option ; do
  case $Option in
    p) PWLEN=$OPTARG ;;
    n) N=$OPTARG ;;
    d) DIGITS=$OPTARG ;;
    s) SYM=$OPTARG ;;
    w) WORDLIST=$OPTARG ;;
    *) show_usage && exit 1 ;; 
  esac
done
shift $(($OPTIND - 1))

MAX_WORD2=$(( $PWLEN - $DIGITS - $SYM - $MIN_WORD ))
MAX_WORD=$(( $MAX_WORD2 > $MAX_WORD1 ? $MAX_WORD1 : $MAX_WORD2 ))

for (( I=0 ; I < N ; I++ )) ; do
  SYMS=
  DIGS=
  WORD_RANGE=$(( $MAX_WORD - $MIN_WORD ))
  if [ $WORD_RANGE -gt 4 ] ; then
    WORD_RANGE=4
  fi
  FIRST_LEN=$(( $MAX_WORD - ( $RANDOM % $WORD_RANGE ) ))
  WORD1=`cat $WORDLIST | grep "^.\{$FIRST_LEN\}\$" | $SHUF -n 1 | sed -e 's/^./\u&/' `
  LEFT=$(( $PWLEN - $FIRST_LEN ))
 
  if [ $(($LEFT - $SYM - $DIGITS)) -lt $MAX_WORD ] ; then
    L_MAX_WORD=$(($LEFT - $SYM - $DIGITS))
    WORD_RANGE=$(( $L_MAX_WORD - $MIN_WORD ))
  fi
  if [ $WORD_RANGE -gt 4 ] ; then
    WORD_RANGE=4
  fi
  SECOND_LEN=$(( $L_MAX_WORD - ( $RANDOM % $WORD_RANGE ) ))
  LEFT=$(( $LEFT - $SECOND_LEN ))

  WORD2=`cat $WORDLIST | grep "^.\{$SECOND_LEN\}\$" | $SHUF -n 1`
  for (( J=0 ; J < SYM ; J++ )) ; do
    SYM1=${SYM_LIST[$(( $RANDOM % $SYM_LEN ))]}
    SYMS=$SYMS$SYM1
    LEFT=$(( $LEFT - 1))
  done 
  for (( ; LEFT > 0 ; LEFT-- )) ; do
    DIG1=$(( $RANDOM % 10 ))
    DIGS=$DIGS$DIG1
  done
  echo ${WORD1}${DIGS}${SYMS}${WORD2}
done
  

